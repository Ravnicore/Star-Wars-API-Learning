{"version":3,"sources":["Images/star_wars_logo.png","Images/Sand_crawler.jpg","Components/Header.js","Components/CardPeople.js","Components/CardPeopleList.js","Components/CardVehicles.js","Components/CardVehiclesList.js","Components/SearchBoxPeople.js","Components/SearchBoxVehicles.js","Components/Scroll.js","Containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","StarWarsLogo","alt","CardPeople","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","modal","backdrop","toggle","bind","assertThisInitialized","changeBackdrop","setState","e","value","target","JSON","parse","_this$props","name","gender","height","mass","skin_color","birth_year","closeBtn","onClick","width","reactstrap_es","isOpen","centered","close","color","Component","CardPeopleList","_ref","people","map","person","i","Components_CardPeople","key","CardVehicles","model","manufacturer","max_atmosphering_speed","passengers","cargo_capacity","cost_in_credits","SandCrawler","CardVehiclesList","vehicles","vehicle","Components_CardVehicles","SearchBoxPeople","searchPeopleField","searchPeopleChange","type","placeholder","onChange","SearchBoxVehicles","searchVehiclesField","searchVehiclesChange","Scroll","style","overflowY","children","App","onSearchPeopleChange","event","removeVehicleCards","document","querySelector","searchFieldPeople","console","log","display","onSearchVehiclesChange","removePeopleCards","searchFieldVehicles","numberOfPeople","numberOfVehicles","fetch","response1","json","peopleParent","status","Error","count","peopleArray","slice","counterPeople","concat","peopleChild","_context","t0","response2","vehiclesParent","vehiclesArray","counterVehicles","vehiclesChild","t1","_this$state","filteredPeople","filter","toLowerCase","includes","filteredVehicles","length","Components_Header","Components_SearchBoxPeople","Components_SearchBoxVehicles","Components_Scroll","Components_CardPeopleList","Components_CardVehiclesList","React","Boolean","window","location","hostname","match","ReactDOM","render","src_Containers_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4167508f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star_wars_logo.f9bd806d.png\";","module.exports = __webpack_public_path__ + \"static/media/Sand_crawler.80e2cca4.jpg\";","import React from 'react';\r\nimport StarWarsLogo from '../Images/star_wars_logo.png';\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<div className='flex flex-row justify-center titleText'>\r\n            <h1 className='SW1'>\r\n              <img src={StarWarsLogo} alt='STAR WARS' />\r\n            </h1>\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport \"../Containers/App.css\"\r\n\r\nclass CardPeople extends Component {\r\n\tconstructor(props) {\r\n    \tsuper(props);\r\n    \tthis.state = {\r\n    \t\tmodal: false,\r\n      \t\tbackdrop: true\r\n    \t};\r\n    \tthis.toggle = this.toggle.bind(this);\r\n    \tthis.changeBackdrop = this.changeBackdrop.bind(this);\r\n  \t}\r\n  \t\r\n  \ttoggle() {\r\n    \tthis.setState({\r\n      \t\tmodal: !this.state.modal\r\n    \t});\r\n  \t}\r\n\r\n  changeBackdrop(e) {\r\n  \tlet value = e.target.value;\r\n  \tif (value !== 'static') {\r\n      value = JSON.parse(value);\r\n    \t}\r\n    this.setState({ backdrop: value });\r\n  }\r\n\r\n  \trender() {\r\n  \t\tconst { name, gender, height, mass, skin_color, birth_year } = this.props;\r\n  \t\tconst closeBtn = <button className=\"modalCloseX\" onClick={this.toggle}>&times;</button>;\r\n\t\treturn (\t\t\r\n\t\t\t<div className='tc black dib br3 pa3 ma2 grow shadow-5 personCard' onClick={this.toggle}>\r\n\t\t\t\t<img alt='people' src={`http://2.bp.blogspot.com/-HzFJhEY3KtU/Tea7Ku92cpI/AAAAAAAAALw/uBMzwdFi_kA/s1600/1.jpg`} width=\"50%\" />\r\n\t    \t\t<div>\r\n\t\t\t\t\t<h1 className='cardPersonTitle'>{name}</h1>\r\n\t  \t\t\t</div>\t      \t\t\r\n\t\t      \t<Modal isOpen={this.state.modal} toggle={this.toggle} className='modalPeople' backdrop={true} centered={true} >\r\n\t          \t\t<ModalHeader className='modalHeaderPeople' toggle={this.toggle} close={closeBtn}>\r\n\t          \t\t\t<div className='modalPeopleTitle'>\r\n\t          \t\t\t\t{name}\r\n\t          \t\t\t</div>\r\n\t          \t\t</ModalHeader>\r\n\t          \t\t<ModalBody className='modalBodyPeople'>\r\n\t            \t\t<p>Gender:  {gender}</p>\r\n\t            \t\t<p>Height:  {height}</p>\r\n\t            \t\t<p>Mass:  {mass}</p>\r\n\t            \t\t<p>Skin color:  {skin_color}</p>\r\n\t            \t\t<p>Birth year:  {birth_year}</p>\r\n\t          \t\t</ModalBody>\r\n\t          \t\t<ModalFooter className='justify-center modalFooterPeople'>\r\n\t            \t\t<Button  color=\"primary\" onClick={this.toggle}>Close</Button>\r\n\t          \t\t</ModalFooter>\r\n\t        \t</Modal>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport\tdefault CardPeople;","import React from 'react';\r\nimport CardPeople from './CardPeople';\r\n\r\nconst CardPeopleList = ({ people }) =>{\r\n\treturn(\r\n\t\t<div className='PeopleCardsContainer'>\r\n\t\t\t{\r\n\t\t\tpeople.map((person, i) =>{\t\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<CardPeople\r\n\t\t\t\t\tkey={i}\r\n\t\t\t\t\tname={people[i].name} \r\n\t\t\t\t\tgender={people[i].gender}\r\n\t\t\t\t\theight={people[i].height}\r\n\t\t\t\t\tmass={people[i].mass}\r\n\t\t\t\t\tskin_color={people[i].skin_color}\r\n\t\t\t\t\tbirth_year={people[i].birth_year}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardPeopleList;","import React, { Component } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport SandCrawler from '../Images/Sand_crawler.jpg';\r\nimport \"../Containers/App.css\"\r\n\r\nclass CardVehicles extends Component {\r\n\tconstructor(props) {\r\n    \tsuper(props);\r\n    \tthis.state = {\r\n    \t\tmodal: false,\r\n      \t\tbackdrop: true\r\n    \t};\r\n    \tthis.toggle = this.toggle.bind(this);\r\n    \tthis.changeBackdrop = this.changeBackdrop.bind(this);\r\n  \t}\r\n  \t\r\n  \ttoggle() {\r\n    \tthis.setState({\r\n      \t\tmodal: !this.state.modal\r\n    \t});\r\n  \t}\r\n\r\n  changeBackdrop(e) {\r\n  \tlet value = e.target.value;\r\n  \tif (value !== 'static') {\r\n      value = JSON.parse(value);\r\n    \t}\r\n    this.setState({ backdrop: value });\r\n  }\r\n\r\n  \trender() {\r\n  \t\tconst { name, model, manufacturer, max_atmosphering_speed, passengers, cargo_capacity, cost_in_credits } = this.props;\r\n  \t\tconst closeBtn = <button className=\"modalCloseX\" onClick={this.toggle}>&times;</button>;\r\n\t\treturn (\t\t\r\n\t\t\t<div className='black dib br3 pa3 ma2 grow shadow-5 vehicleCard' onClick={this.toggle}>\r\n\t\t\t\t<img alt='vehicles' src={SandCrawler} width=\"50%\" />\r\n\t    \t\t<div>\r\n\t\t\t\t\t<h1 className='cardVehicleTitle'>{name}</h1>\r\n\t  \t\t\t</div>\t      \t\t\r\n\t\t      \t<Modal isOpen={this.state.modal} toggle={this.toggle} className='modalVehicles' backdrop={true} centered={true} >\r\n\t          \t\t<ModalHeader className='modalHeaderVehicles' toggle={this.toggle} close={closeBtn}>\r\n\t          \t\t\t<div className='modalVehiclesTitle'>\r\n\t          \t\t\t\t{name}\r\n\t          \t\t\t</div>\r\n\t          \t\t</ModalHeader>\r\n\t          \t\t<ModalBody className='modalBodyVehicles'>\r\n\t            \t\t<p>Model:  {model}</p>\r\n\t            \t\t<p>Manufacturer:  {manufacturer}</p>\r\n\t            \t\t<p>Max Speed:  {max_atmosphering_speed}</p>\r\n\t            \t\t<p>passengers:  {passengers}</p>\r\n\t            \t\t<p>cargo_capacity:  {cargo_capacity}</p>\r\n\t            \t\t<hr />\r\n\t            \t\t<p>Cost (in credits):  {cost_in_credits}</p>\r\n\t          \t\t</ModalBody>\r\n\t          \t\t<ModalFooter className='justify-center modalFooterVehicles'>\r\n\t            \t\t<Button  color=\"primary\" onClick={this.toggle}>Close</Button>\r\n\t          \t\t</ModalFooter>\r\n\t        \t</Modal>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport\tdefault CardVehicles;","import React from 'react';\r\nimport CardVehicles from './CardVehicles';\r\n\r\nconst CardVehiclesList = ({ vehicles }) =>{\r\n\treturn(\r\n\t\t<div className='vehiclesCardsContainer'>\r\n\t\t\t{\r\n\t\t\tvehicles.map((vehicle, i) =>{\t\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<CardVehicles\r\n\t\t\t\t\tkey={i}\r\n\t\t\t\t\tname={vehicles[i].name} \r\n\t\t\t\t\tmodel={vehicles[i].model}\r\n\t\t\t\t\tmanufacturer={vehicles[i].manufacturer}\r\n\t\t\t\t\tmax_atmosphering_speed={vehicles[i].max_atmosphering_speed}\r\n\t\t\t\t\tpassengers={vehicles[i].passengers}\r\n\t\t\t\t\tcargo_capacity={vehicles[i].cargo_capacity}\r\n\t\t\t\t\tcost_in_credits={vehicles[i].cost_in_credits}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardVehiclesList;","import React from 'react';\r\n\r\nconst SearchBoxPeople = ({searchPeopleField, searchPeopleChange}) => {\r\n\treturn(\r\n\t\t<div className=''>\r\n\t\t\t<input \r\n\t\t\tclassName = 'tc pa2 ba b--green bg-lightest-blue'\r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='Search People Names'\r\n\t\t\tonChange={searchPeopleChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default SearchBoxPeople;","import React from 'react';\r\n\r\nconst SearchBoxVehicles = ({searchVehiclesField, searchVehiclesChange}) => {\r\n\treturn(\r\n\t\t<div className=''>\r\n\t\t\t<input \r\n\t\t\tclassName = 'tc pa2 ba b--green bg-lightest-orange'\r\n\t\t\ttype='search' \r\n\t\t\tplaceholder='Search Vehicle Names'\r\n\t\t\tonChange={searchVehiclesChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default SearchBoxVehicles;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{\r\n\t\t\toverflowY: 'auto', \r\n\t\t\theight:'calc(100vh - 200px)'\r\n\t\t}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\nimport Header from '../Components/Header';\nimport CardPeopleList from '../Components/CardPeopleList';\nimport CardVehiclesList from '../Components/CardVehiclesList';\nimport SearchBoxPeople from '../Components/SearchBoxPeople';\nimport SearchBoxVehicles from '../Components/SearchBoxVehicles';\nimport Scroll from '../Components/Scroll';\nimport './App.css';\nimport '../Components/Header';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      people: [],\n      searchFieldPeople: '',\n      person: '',\n      numberOfPeople: '',\n      vehicles: [],\n      searchFieldVehicles: '',\n      vehicle: '',\n      numberOfVehicles: ''\n    }\n  }\n\n  async componentDidMount() {\n       // ---PEOPLE---\n       try {\n        const response1 = await fetch('https://swapi.co/api/people/?format=json');\n        const peopleParent = await response1.json();\n        if(response1.status !==200){\n          throw new Error(\"Not 200 response1 from fetch request. \")\n        } else {\n          this.setState({numberOfPeople: peopleParent.count})\n        }\n        let peopleArray = this.state.people.slice();\n        let counterPeople = 0; //This is used in case one fetch does not work in the array\n        for (let i=1; i<this.state.numberOfPeople; i++){\n          counterPeople++; //always add one here. start at 0 and we like starting our counter at 1\n          const response1 = await fetch(`https://swapi.co/api/people/${i}/?format=json`);\n          const peopleChild = await response1.json();\n          if(response1.status !==200){\n            counterPeople--; //subtract 1 since add one everytime and this element does not fetch exist\n          } else {\n            peopleArray[counterPeople] = peopleChild;\n          }\n        }\n        this.setState({people: peopleArray});\n        console.log(this.state.people);\n       }catch (err){\n         console.log('Could not find star wars people list: ', err);\n       }\n// ---VEHICLES---\n       try {\n        const response2 = await fetch('https://swapi.co/api/vehicles/?format=json');\n        const vehiclesParent = await response2.json();\n        if(response2.status !==200){\n          throw new Error(\"Not 200 response2 from fetch request. \")\n        } else {\n          this.setState({numberOfVehicles: vehiclesParent.count})\n        }\n        let vehiclesArray = this.state.vehicles.slice();\n        let counterVehicles = 0; //This is used in case one fetch does not work in the array\n        for (let i=1; i<this.state.numberOfVehicles; i++){\n          counterVehicles++; //always add one here. start at 0 and we like starting our counter at 1\n          const response2 = await fetch(`https://swapi.co/api/vehicles/${i}/?format=json`);\n          const vehiclesChild = await response2.json();\n          if(response2.status !==200){\n            counterVehicles--; //subtract 1 since add one everytime and this element does not fetch exist\n          } else {\n            vehiclesArray[counterVehicles] = vehiclesChild;\n          }\n        }\n        this.setState({vehicles: vehiclesArray});\n        console.log(this.state.vehicles);\n       }catch (err){\n         console.log('Could not find star wars vehicle list: ', err);\n       }\n  }\n\n   onSearchPeopleChange = (event) =>{\n    let removeVehicleCards = document.querySelector(\".vehiclesCardsContainer\");\n     this.setState({ searchFieldPeople: event.target.value })\n     if (event.target.value !== null){\n      console.log(event.target.value);\n        if (removeVehicleCards.style.display !== \"none\" && event.target.value !== \"\" ){\n          removeVehicleCards.style.display = \"none\";\n        }\n        if (removeVehicleCards.style.display === \"none\" && event.target.value === \"\") {\n          removeVehicleCards.style.display = \"block\";\n        }\n     }\n   }\n\n\n   onSearchVehiclesChange = (event) =>{\n    let removePeopleCards = document.querySelector(\".PeopleCardsContainer\");\n     this.setState({ searchFieldVehicles: event.target.value });\n     if (event.target.value !== null){\n      console.log(event.target.value);\n        if (removePeopleCards.style.display !== \"none\" && event.target.value !== \"\" ){\n          removePeopleCards.style.display = \"none\";\n        }\n        if (removePeopleCards.style.display === \"none\" && event.target.value === \"\") {\n          removePeopleCards.style.display = \"block\";\n        }\n     }\n   }\n\n  render() {\n    const { people, searchFieldPeople, vehicles, searchFieldVehicles } = this.state;\n    const filteredPeople = people.filter(person=>{\n      return person.name.toLowerCase().includes(searchFieldPeople.toLowerCase());\n    })\n    const filteredVehicles = vehicles.filter(vehicle=>{\n      return vehicle.name.toLowerCase().includes(searchFieldVehicles.toLowerCase());\n    })\n    return !people.length ?  <h1 className='loadingHeader'>Loading</h1> : //if there are no cards\n    (\n      <div className='WholeAppLayout'>\n        <div className=\"stars\"></div>\n        <div className=\"twinkling\"></div>\n        <div className=\"clouds\"></div>\n        <div className=\"flex flex-column App\">\n          <Header />\n          <div className='flex flex-row justify-around filterAndCards'>\n            <div className='flex flex-column w-20'>\n              <div className='flex flex-row outline'>\n                <h2 className=\"sectionTitles w-100\">Filter Area</h2>\n              </div>\n              <div className='flex flex-row items-center justify-center filterTextBox'>\n                <p>Person's Name:</p>\n                <SearchBoxPeople searchPeopleChange={this.onSearchPeopleChange}/>\n              </div>\n              <div className='flex flex-row items-center justify-center filterTextBox'>\n                <p>Vehicle's Name:</p>\n                <SearchBoxVehicles searchVehiclesChange={this.onSearchVehiclesChange}/>\n              </div>\n            </div>\n            <div className='flex flex-column w-70'>\n              <div className='flex flex-row outline'>\n                <h2 className=\"sectionTitles w-100\">Cards Area</h2>\n              </div>\n              <div className='flex flex-row'>\n                <div className='fullCardList w-100'>\n                  <Scroll>\n                    <CardPeopleList  people={ filteredPeople } />\n                    <CardVehiclesList  vehicles={ filteredVehicles } />\n                  </Scroll>\n                </div>\n              </div>\n            </div>  \n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}